#!/bin/bash

CMD=$( basename $0 )
VERSION="0.1"
USAGE="Usage: $CMD [-h] [-v] [-p preset] [-m mode] [-a bitrate | -v level ] inputfiles ..."

# ---------------------------------------------------------
function print () {
   C=$1
   shift
   for MSG in "$@"; do
      echo >&$C "$MSG"
   done
}
# ---------------------------------------------------------
function verbose () {
  test "$VERBOSE" && print 1 "$@"
}
# ---------------------------------------------------------
function warn () {
  print 2 "$@"
}
# ---------------------------------------------------------
function fail () {
  print 2 "$@"
  exit 1
}
# ---------------------------------------------------------
function printusage () {
  test "$1" && echo >&2 "$CMD: $1\n"
  echo >&2 "$USAGE"
  exit 2
}
# ---------------------------------------------------------
function printhelp () {
  cat << EOF
ogg2mp3 version $VERSION 

Bulk transcoding of OGG Vorbis to MP3. 

$USAGE

Options:
  -h, --help            Print help
  -v. --verbose         Print verbose information.
  -p, --preset=PRESET   Use preset PRESET for encoding.

EOF
  exit 0
}

# ---------------------------------------------------------
# parse command line options
# ---------------------------------------------------------

OPTS=$( getopt -n $CMD -o h?p:v --long help,preset:,verbose -- "$@" )
eval set -- $OPTS

while [ "$#" -gt 0 ]; do
  case "$1" in
    -h|-\?|--help)  printhelp;;
    -v|--verbose)   VERBOSE="1";;
    -p|--preset)    PRESET="$2"; shift;;
    --)             shift; break;; # $@ is used below
    *)              printusage "Invalid option '$1'!";;
  esac
  shift
done

test "$1" || printusage "No input files defined!"

# ---------------------------------------------------------
# transcode 
# ---------------------------------------------------------

function transcode () {

   function parsetag () {
     echo "$1" | grep "$2=" | cut -d= -f2
   }

   # read ogginfo output
   OGGINFO=$( ogginfo "$1" )
   test "$?" != "0" && fail "ogginfo failed!" "$OGGINFO"

   # parse nominal bitrate
   BITRATE=$( echo "$OGGINFO" | grep "Nominal bitrate:" | cut -d' ' -f3 )
   test "$BITRATE" || fail "Unable to parse bitrate!"
   verbose "Bitrate: $BITRATE"

   # parse tags
   ARTIST=$( parsetag "$OGGINFO" "artist" )
   ALBUM=$( parsetag "$OGGINFO" "album" )
   TITLE=$( parsetag "$OGGINFO" "title" )
   TRACKNUMBER=$( parsetag "$OGGINFO" "tracknumber" )
   YEAR=$( parsetag "$OGGINFO" "date" )
   GENRE=$( parsetag "$OGGINFO" "genre" )
   COMMENT=$( parsetag "$OGGINFO" "comment" )
   
   # decode | encode
   oggdec -Q -o- "$1" | lame -S --silent -mj --abr $BITRATE -q7 \
      --ta "$ARTIST" --tt "$TITLE" --ta "$ALBUM" --ty "$YEAR" --tn "$TRACKNUMBER" --tg "$GENRE" -tc "$COMMENT" \
	  - "${1/.ogg/.mp3}"
}

# ---------------------------------------------------------
#  process recursion
# ---------------------------------------------------------

function processfile () {
   FILE="$1"
#   FOLDER=$( basename "$2" )
   
   # fail if invalid file
   test -r "$FILE" || fail "Unable to read file '$FILE'!"
   
   # if directory, process content
   if [ -d "$FILE" ]; then
      verbose "Processing directory '$FILE' ..."
#      pushd . > /dev/null
#      cd "$FILE"
      for SUBFILE in "$FILE"/*; do
      
         processfile "$SUBFILE"
      done
#      popd > /dev/null
   else
      verbose "Processing file '$FILE' ..."
      # test if ogg file
      ISOGG=$( file "$FILE" | grep "Ogg data" | grep "Vorbis audio" )
      if [ "$ISOGG" ]; then 
         # transcode this file
 #        transcode "$FILE"
         echo .
      else
         warn "Not an Ogg Vorbis file: '$FILE'"
      fi
   fi
}

# ---------------------------------------------------------
#  main (recursion start)
# ---------------------------------------------------------

for FILE in "$@"; do
   processfile $( basename "$FILE" )
done


